const puzzleInputAfter10000 = "41485751669364624619664136021340848895273783028314220677479042750423167338988127275169636815062319944289321014537557134632535542644518634729879917115261635657324852614385206496216986450142030438202167209000467577985226311783074643024615199519210379411136726530836017404291191838899434234261912887251592773020574125075537836948383584434542091586404479196707115743987048803609844897358173884075875604774462276987926558394519810790067296290210224549783535528590297143602856873009230021576303564933165417548580018369811648970497048282966426088159885929658479115972460914290227526971993969876471542499981509868286445553986818988125667818317909354757361550"

const puzzleInput = "59734319985939030811765904366903137260910165905695158121249344919210773577393954674010919824826738360814888134986551286413123711859735220485817087501645023012862056770562086941211936950697030938202612254550462022980226861233574193029160694064215374466136221530381567459741646888344484734266467332251047728070024125520587386498883584434047046536404479146202115798487093358109344892308178339525320609279967726482426508894019310795012241745215724094733535028040247643657351828004785071021308564438115967543080568369816648970492598237916926533604385924158979160977915469240727071971448914826471542444436509363281495503481363933620112863817909354757361550"

const inputArray = puzzleInput.split('')

const basePattern = [0, 1, 0, -1]

const getPatternPart = (pattern, index) => {
    while (pattern.length <= index) {
        index -= pattern.length
    }
    return pattern[index]
}


const createPattern = (pattern, times) => {
    const newPattern = []

    pattern.forEach(val => {
        for (let x = 0; x <= times; x++) {
            newPattern.push(val)
        }
    })


    return newPattern
}

const doPhase = (phaseArray) => {

    const newArray = phaseArray.map((val, up) => {
        const pattern = createPattern(basePattern, up)


        return [...phaseArray].map((value, index) => {

            const result = value * getPatternPart(pattern, index + 1)

            return result.toString().substr(-1) * (result > 0 ? 1 : -1)
        }).reduce((acc, value) => {
            return Number(acc) + Number(value)
        }, 0).toString().substr(-1)
    })

    return newArray
}

// let target = [...inputArray]

// for (let x = 0; x < 100; x++) {
//     target = doPhase(target)
// }


// const myResult = target.join('')

// console.log(myResult)


//// part 2

let target = puzzleInputAfter10000.split('')

for (let x = 0; x < 100; x++) {
    target = doPhase(target)
    console.log
}


const myResult = target.join('')

const resultOffset = 5973431

const modulo = resultOffset % myResult.length 

console.log(modulo)

console.log(myResult.substr(modulo, 8))


// RESULT 60592199